<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:XControl="clr-namespace:Tool.XControl"
                   >
                    
    <Style x:Key="CustomerItemStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ItemsControl.AlternationIndex" Value="1" />
                    <Condition Property="IsSelected" Value="False" />
                    <Condition Property="IsMouseOver" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="#EEEEEEEE" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    
    <Style x:Key="ConfigStateChange" TargetType="{x:Type TextBlock}">
        <Style.Triggers>
            <Trigger Property="IsEnabled"  Value="True">
                <Setter Property="Foreground" Value="#00c4c2"/>
            </Trigger>
            <Trigger Property="IsEnabled"  Value="False">
                <Setter Property="Foreground" Value="#6B7074"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabled"  Value="True" ></Condition>
                    <Condition Property="IsMouseOver"  Value="True"></Condition>
                </MultiTrigger.Conditions>
                <Setter Property="TextDecorations" Value="Underline"></Setter>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="NetStateChange" TargetType="{x:Type TextBlock}">
        <Style.Triggers>
            <Trigger Property="IsEnabled"  Value="False" >
                <Setter Property="Foreground" Value="Red"/>
                <Setter Property="Text" Value="未连接"/>
            </Trigger>
            <Trigger Property="IsEnabled"  Value="true">
                <Setter Property="Foreground" Value="#00c4c2"/>
                <Setter Property="Text" Value="已连接"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ConnectStyle" TargetType="{x:Type XControl:ImageButton}">
        <Style.Triggers>
            <Trigger Property="IsEnabled"  Value="False" >
                <Setter Property="LeaveImage" Value="../Assets/icon开始连接disabled.png"/>
            </Trigger>
            <Trigger Property="IsEnabled"  Value="true" >
                <Setter Property="LeaveImage" Value="../Assets/icon开始连接.png"/>
            </Trigger>
            
        </Style.Triggers>
    </Style>

    <Style x:Key="DisConnectStyle" TargetType="{x:Type XControl:ImageButton}">
        <Style.Triggers>
            <Trigger Property="IsEnabled"  Value="False" >
                <Setter Property="LeaveImage" Value="../Assets/icon断开连接disabled.png"/>
            </Trigger>
            <Trigger Property="IsEnabled"  Value="true" >
                <Setter Property="LeaveImage" Value="../Assets/icon断开连接.png"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RebootHostStyle" TargetType="{x:Type XControl:ImageButton}">
        <Style.Triggers>
            <Trigger Property="IsEnabled"  Value="False" >
                <Setter Property="LeaveImage" Value="../Assets/icon重启电脑disabled.png"/>
            </Trigger>
            <Trigger Property="IsEnabled"  Value="true" >
                <Setter Property="LeaveImage" Value="../Assets/icon重启电脑.png"/>
            </Trigger>
        </Style.Triggers>
    </Style>




    <Style x:Key="DownLoadStyle" TargetType="{x:Type XControl:ImageButton}">
        <Style.Triggers>
            <Trigger Property="IsEnabled"  Value="False" >
                <Setter Property="LeaveImage" Value="../Assets/icon下载disabled.png"/>
            </Trigger>
            <Trigger Property="IsEnabled"  Value="true" >
                <Setter Property="LeaveImage" Value="../Assets/icon下载.png"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="UpdateStyle" TargetType="{x:Type XControl:ImageButton}">
        <Style.Triggers>
            <Trigger Property="IsEnabled"  Value="False" >
                <Setter Property="LeaveImage" Value="../Assets/icon升级disabled.png"/>
            </Trigger>
            <Trigger Property="IsEnabled"  Value="true" >
                <Setter Property="LeaveImage" Value="../Assets/icon升级.png"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RefreshStyle" TargetType="{x:Type XControl:ImageButton}">
        <Style.Triggers>
            <Trigger Property="IsEnabled"  Value="False" >
                <Setter Property="LeaveImage" Value="../Assets/icon重新获取disabled.png"/>
            </Trigger>
            <Trigger Property="IsEnabled"  Value="true" >
                <Setter Property="LeaveImage" Value="../Assets/icon重新获取.png"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ResetBinStyle" TargetType="{x:Type XControl:ImageButton}">
        <Style.Triggers>
            <Trigger Property="IsEnabled"  Value="False" >
                <Setter Property="LeaveImage" Value="../Assets/icon重启disabled.png"/>
            </Trigger>
            <Trigger Property="IsEnabled"  Value="true" >
                <Setter Property="LeaveImage" Value="../Assets/icon重启.png"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="UpdateAGVShellStyle" TargetType="{x:Type XControl:ImageButton}">
        <Style.Triggers>
            <Trigger Property="IsEnabled"  Value="False" >
                <Setter Property="LeaveImage" Value="../Assets/iconshell自更新disabed.png"/>
            </Trigger>
            <Trigger Property="IsEnabled"  Value="true" >
                <Setter Property="LeaveImage" Value="../Assets/iconshell自更新.png"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="UpdateDriverStyle" TargetType="{x:Type XControl:ImageButton}">
        <Style.Triggers>
            <Trigger Property="IsEnabled"  Value="False" >
                <Setter Property="LeaveImage" Value="../Assets/icon自主驱动升级disabled.png"/>
            </Trigger>
            <Trigger Property="IsEnabled"  Value="true" >
                <Setter Property="LeaveImage" Value="../Assets/icon自主驱动升级.png"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="NTPStyle" TargetType="{x:Type XControl:ImageButton}">
        <Style.Triggers>
            <Trigger Property="IsEnabled"  Value="False" >
                <Setter Property="LeaveImage" Value="../Assets/iconntp服务地址disabled.png"/>
            </Trigger>
            <Trigger Property="IsEnabled"  Value="true" >
                <Setter Property="LeaveImage" Value="../Assets/iconntp服务地址.png"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BackUpStyle" TargetType="{x:Type XControl:ImageButton}">
        <Style.Triggers>
            <Trigger Property="IsEnabled"  Value="False" >
                <Setter Property="LeaveImage" Value="../Assets/icon备份disabled.png"/>
            </Trigger>
            <Trigger Property="IsEnabled"  Value="true" >
                <Setter Property="LeaveImage" Value="../Assets/icon备份.png"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MSGStyle" TargetType="{x:Type XControl:ImageButton}">
        <Style.Triggers>
            <Trigger Property="IsEnabled"  Value="False" >
                <Setter Property="LeaveImage" Value="../Assets/icon执行脚本disabled.png"/>
            </Trigger>
            <Trigger Property="IsEnabled"  Value="true" >
                <Setter Property="LeaveImage" Value="../Assets/icon执行脚本.png"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="LockFilesStyle" TargetType="{x:Type XControl:ImageButton}">
        <Style.Triggers>
            <Trigger Property="IsEnabled"  Value="False" >
                <Setter Property="LeaveImage" Value="../Assets/icon锁disabled.png"/>
            </Trigger>
            <Trigger Property="IsEnabled"  Value="true" >
                <Setter Property="LeaveImage" Value="../Assets/icon加锁.png"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="UnLockFilesStyle" TargetType="{x:Type XControl:ImageButton}">
        <Style.Triggers>
            <Trigger Property="IsEnabled"  Value="False" >
                <Setter Property="LeaveImage" Value="../Assets/icon锁disabled.png"/>
            </Trigger>
            <Trigger Property="IsEnabled"  Value="true" >
                <Setter Property="LeaveImage" Value="../Assets/icon解锁.png"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="TaskDetailInfo" TargetType="{x:Type TextBlock}">
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"  Value="True"></Condition>
                </MultiTrigger.Conditions>
                <Setter Property="TextDecorations" Value="Underline"></Setter>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FileIconType" TargetType="{x:Type XControl:FolderTypeImage}">
        <Style.Triggers>
            <Trigger Property="IsEnabled"  Value="False" >
                <Setter Property="ImageShow" Value="../Assets/FileIcon.png"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled"  Value="true">
                <Setter Property="ImageShow" Value="../Assets/文件夹关闭min.png"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="GridViewColumnHeaderGripper" TargetType="Thumb">
        <Setter Property="Width" Value="18" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="Transparent" Margin="0 0 0 2">
                        <Rectangle Width="1" Fill="{TemplateBinding Background}" HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultGridViewColumnHeader" TargetType="GridViewColumnHeader">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="4 2 4 2" />
        <Setter Property="MinHeight" Value="26"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="BorderThickness" Value="0,0,0,3" />
      
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewColumnHeader">
                    <Grid>
                        <Border  Margin="{TemplateBinding Margin}" x:Name="HeaderBorder" Padding="{TemplateBinding Padding}" Background="#FFD9D9D9"  BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter x:Name="HeaderContent" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="HeaderContent" Property="Margin" Value="6,1,6,1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock TextBlock.FontWeight="SemiBold" Text="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Role" Value="Floating">
                <Setter Property="Opacity" Value="0.7" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <Canvas Name="PART_FloatingHeaderCanvas">
                                <Rectangle Fill="#60000000" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}" />
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="GridViewColumnHeader" TargetType="GridViewColumnHeader">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="4 2 4 2" />
        <Setter Property="MinHeight" Value="26"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="BorderThickness" Value="0,0,0,3" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewColumnHeader">
                    <Grid>
                        <Border x:Name="HeaderBorder" Padding="{TemplateBinding Padding}" Background="Transparent"  BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter x:Name="HeaderContent" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="HeaderContent" Property="Margin" Value="6,1,6,1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock TextBlock.FontWeight="SemiBold" Text="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Role" Value="Floating">
                <Setter Property="Opacity" Value="0.7" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <Canvas Name="PART_FloatingHeaderCanvas">
                                <Rectangle Fill="#60000000" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}" />
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TiTleStyle" TargetType="{x:Type TextBlock}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver"  Value="True">
                <Setter Property="TextDecorations" Value="Underline"></Setter>
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Foreground" Value="#00c4c2"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>